version: "3"

dotenv: ["../../../.env"]

tasks:
  # install scripts
  install-frontend:
    desc: install frontend dependencies
    internal: true
    dir: ./frontend
    cmds:
      - bun install --verbose

  install-tenapp:
    desc: install tenapp dependencies
    internal: true
    dir: ./tenapp
    cmds:
      - tman install

  install-tenapp-python-deps:
    desc: install tenapp python dependencies
    deps: [install-tenapp]
    internal: true
    dir: ./tenapp
    cmds:
      - ./scripts/install_python_deps.sh

  build-api-server:
    desc: build api server
    dir: ../../../server
    cmds:
      - go mod tidy && go mod download && go build -o bin/api main.go

  install:
    desc: install dependencies
    dir: ./tenapp
    cmds:
      - task: install-tenapp
      - task: install-tenapp-python-deps
      - task: install-frontend
      - task: build-api-server


  # run scripts
  run-tenapp:
    desc: run tenapp
    dir: ./tenapp
    cmds:
      - tman run start

  run-gd-server:
    desc: run tman dev http server for TMAN Designer
    dir: ./tenapp
    cmds:
      - tman designer

  run-frontend:
    desc: run frontend
    dir: ./frontend
    cmds:
      - bun run dev

  run-api-server:
    desc: run api server
    dir: ../../../server
    cmds:
      - ./bin/api -tenapp_dir={{.PWD}}/tenapp

  run:
    desc: run everything
    deps:
      - task: run-gd-server
      - task: run-frontend
      - task: run-api-server

  clean:
    desc: clean caches and stop background services
    cmds:
      - task: clean-tenapp-cache
      - task: clean-frontend-cache
      - task: clean-node-modules
      - task: kill-dev-processes

  clean-tenapp-cache:
    desc: remove TEN app cache files
    silent: true
    cmds:
      - rm -rf ./tenapp/agora_cache.db ./tenapp/agoradns.dat ./tenapp/agorareport.dat

  clean-frontend-cache:
    desc: remove frontend build artifacts
    silent: true
    cmds:
      - rm -rf ./frontend/.next ./frontend/.turbo ./frontend/.cache

  clean-node-modules:
    desc: remove node_modules (frontend + playground)
    silent: true
    cmds:
      - rm -rf ./frontend/node_modules
      - rm -rf ../../../playground/node_modules

  kill-dev-processes:
    desc: kill dev servers using default ports (requires macOS / lsof + kill)
    silent: true
    cmds:
      - |
        set +e
        for port in 3000 49483 8080; do
          pid=$(lsof -ti tcp:$port 2>/dev/null | head -n 1)
          if [ -n "$pid" ]; then
            echo "Killing process $pid on port $port"
            kill "$pid" >/dev/null 2>&1 || true
          fi
        done
        set -e


  # release scripts
  release:
    desc: release
    cmds:
      - ../../scripts/release.sh {{.PWD}}/tenapp
